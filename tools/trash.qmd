## Under red LED

Directory _/LED_PD_UpdF_UpdR_02112022_

**surpressed two plots because they had pretty much the same results as the next two ones**

```{python}
# dataset = pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdF_UpdF_2022-12-02_16-24-39_0.csv',
#   sep=',', skiprows=3)

# pys.SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 
#   'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000)
# # plt.subplots_adjust()
# plt.yscale('log')
# plt.legend(title='$I_{LED} [mA]$', loc='best')
# plt.suptitle('Photodiode forward voltage versus forward current')
# plt.title('Variable red LED illumination')
# plt.xlabel('$U_{pdF} [V]$')
# plt.ylabel('$I_{pdF} [nA]$')

# plt.show()
```

```{python}
# dataset=pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdR_UpdR 2022-12-02 15-57-44 0.csv', sep=',', skiprows=3)

# pys.SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000, xScale=-1)
# plt.gca().invert_yaxis()
# plt.legend(title='$I_{LED} [mA]$', loc='best')
# plt.suptitle('Photodiode reverse voltage versus reverse current')
# plt.title('Variable red LED illumination')
# # plt.yscale('log')
# plt.xlabel('$U_{pdR} [V]$')
# plt.ylabel('$I_{pdR} [nA]$')

# plt.show()
```


<!-- ### Trace - RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1

```{python}
dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1\Trace 2022-11-30 13-37-16 0.csv', 
sep=',', skiprows=1, usecols=['Time (s)','1 (VOLT)','3 (VOLT)'])

dataset['Time (s)'] = (dataset['Time (s)'] - dataset['Time (s)'][0]) * 1000

plt.figure()
plt.plot(dataset['Time (s)'], dataset['1 (VOLT)'], label='U_generator')
plt.plot(dataset['Time (s)'], dataset['3 (VOLT)'], label='U_photodiode')
plt.ylabel('U [V]')
plt.xlabel('Time [ms]')
plt.grid()
plt.show()

dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1\Trace 2022-11-30 13-40-46 0.csv', 
sep=',', skiprows=1, usecols=['Time (s)','1 (VOLT)','3 (VOLT)'])

dataset['Time (s)'] = (dataset['Time (s)'] - dataset['Time (s)'][0])*1000

plt.figure()
plt.plot(dataset['Time (s)'], dataset['1 (VOLT)'], label='U_generator')
plt.plot(dataset['Time (s)'], dataset['3 (VOLT)'], label='U_photodiode')
plt.ylabel('U [V]')
plt.xlabel('Time [ms]')
plt.grid()
plt.show()
``` -->

## Blue LED

Directory _LVJ_OPTO_LEDtrans20122022_

```{python}

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_nt_u4v1khz1_', ['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 1 kHz')

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_nt_u4v1khz2_', ['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 2 kHz')

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_onu4v1khz3_',['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 3 kHz')

pys.PrintDataFromDirectory(directoryPath='datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022')

```
## photodiode b? f = 1kHZ, U_gen = +2V/-2V whole period
```{python}
# pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_f1ku2t1_', endings=('1','3','F1'))
```
## photodiode b? f = 1kHZ, U_gen = +2V/-2V

```{python}
#pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2f2_', endings=('1','3','F1'))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V pd_b_r1ku2f2_1???

```{python}
#pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2f2_', endings=('1','3','F1'))
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr2_1???
```{python}
# pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_d_f1ku2onr2_', endings=('1','3','F1'))
```

<!-- ## iled_bu5vf1khof3_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khof3_', endings=('1','3','F1'))
``` -->

<!-- ## iled_bu5vf1khof4_1

```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khof4_', endings=('1','3','F1'))
```


## iled_bu5vf1khon_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khon_', endings=('1','3','F1'))
``` -->

datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-01-29 0.csv 

<!-- ```{python}

dataset = pd.read_csv('datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-01-29 0.csv', skiprows=1, sep=',', usecols=['Time (s)','1 (VOLT)','2 (AMP)','M1'])

resistance = 100.0 #
columnNames = dataset.columns
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset[columnNames[3]] = dataset[columnNames[3]] / resistance * 1000
dataset[columnNames[0]] = (dataset[columnNames[0]] - dataset[columnNames[0]][0]) * 10**9# to nanoseconds, substract offset

pys.PlotVoltageCurrentDataset(dataset)

```

datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-02-20 0.csv

```{python}

dataset = pd.read_csv('datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-02-20 0.csv', skiprows=1, sep=',', usecols=['Time (s)','1 (VOLT)','2 (AMP)','M1'])

resistance = 100.0 #
columnNames = dataset.columns
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset[columnNames[3]] = dataset[columnNames[3]] / resistance * 1000
dataset[columnNames[0]] = (dataset[columnNames[0]] - dataset[columnNames[0]][0]) * 10**9# to nanoseconds, substract offset

pys.PlotVoltageCurrentDataset(dataset)

```

datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-02-38 0.csv

```{python}

dataset = pd.read_csv('datasets\GREEN_LED_PD_mj\ILED_Green_Ipd_UpdUF_0_2V\Trans_ipd_Ustep_4V_Iled2005mA_Trace 2022-12-06 13-02-38 0.csv', skiprows=1, sep=',', usecols=['Time (s)','1 (VOLT)','2 (AMP)','M1'])

resistance = 100.0 #
columnNames = dataset.columns
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset[columnNames[3]] = dataset[columnNames[3]] / resistance * 1000
dataset[columnNames[0]] = (dataset[columnNames[0]] - dataset[columnNames[0]][0]) * 10**9# to nanoseconds, substract offset

pys.PlotVoltageCurrentDataset(dataset)

``` -->


# Directory RED_LED_PD_mj/RED_LED_PD_mj/RED_transient/

## iPD_t_Rled15mA_Uf3V_off1V_f1kHz_off
```{python}

dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\RED_transient\iPD_t_Rled15mA_Uf3V_off1V_f1kHz_off\Trace 2022-12-21 12-27-21 0.csv', skiprows=1, sep=',', usecols=['Time (s)','2 (VOLT)','3 (VOLT)','M1'])

resistance = 100.0 #
columnNames = dataset.columns
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset[columnNames[3]] = dataset[columnNames[3]] / resistance * 1000
dataset[columnNames[0]] = (dataset[columnNames[0]] - dataset[columnNames[0]][0]) * 10**9# to nanoseconds, substract offset

pys.PlotVoltageCurrentDataset(dataset)

```
datasets\RED_LED_PD_mj\RED_LED_PD_mj\RED_transient\iPD_t_Rled15mA_Uf3V_off1V_f1kHz_off\Trace 2022-12-21 12-29-00 0.csv is the same file, but seperated with tabs


```{python}

dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\RED_transient\iPD_t_Rled20mA_Uf3V_off1V_f1kHz\Trace 2022-12-21 13-13-35 0.csv', skiprows=1, sep=',', usecols=['Time (s)','2 (VOLT)','3 (VOLT)','M1'])

resistance = 100.0 #
columnNames = dataset.columns
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset[columnNames[3]] = dataset[columnNames[3]] / resistance * 1000
dataset[columnNames[0]] = (dataset[columnNames[0]] - dataset[columnNames[0]][0]) * 10**9# to nanoseconds, substract offset

pys.PlotVoltageCurrentDataset(dataset)

```
