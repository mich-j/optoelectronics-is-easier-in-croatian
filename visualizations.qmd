---
title: "Optoelectronics laboratory results"
format:
  html:
    toc: true
    toc-location: left
    html-math-method: katex
    theme: minty
    code-fold: true
    code-overflow: wrap
    code-tools: true
---

Including necessary libraries
```{python}
import pandas as pd
import matplotlib.pyplot as plt

import numpy as np
from scipy.signal import savgol_filter
from decimal import Decimal
from os import listdir
from os.path import isfile, join

import python_scripts as pys
```

# Photodiode forward and reverse, in dark and illuminated
## Under red LED

Directory _/LED_PD_UpdF_UpdR_02112022_

```{python}
dataset = pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdF_UpdF_2022-12-02_16-24-39_0.csv',
  sep=',', skiprows=3)

pys.SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 
  'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000)
# plt.subplots_adjust()
plt.yscale('log')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.suptitle('Photodiode forward voltage versus forward current')
plt.title('Variable red LED illumination')
plt.xlabel('$U_{pdF} [V]$')
plt.ylabel('$I_{pdF} [nA]$')

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdR_UpdR 2022-12-02 15-57-44 0.csv', sep=',', skiprows=3)

pys.SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000, xScale=-1)
plt.gca().invert_yaxis()
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.suptitle('Photodiode reverse voltage versus reverse current')
plt.title('Variable red LED illumination')
# plt.yscale('log')
plt.xlabel('$U_{pdR} [V]$')
plt.ylabel('$I_{pdR} [nA]$')

plt.show()
```

 Directory _/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1_

```{python}
dataset = pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1/Ipd_Popt6_UpdF_30112022 2022-11-30 12-02-00 0 2022-11-30 12-42-42 0.csv',
  sep=',', skiprows=5)
pys.SweepPlot(dataset, '2 - Get Measurement Value', 'Get Measurement Value', 
  '1 - Sweep CH2 Voltage Setting', '1 - Get CH2 Current Measurement', 2, yScale=10**3, labelScale=1000)
plt.yscale('log')
plt.suptitle('Photodiode forward voltage versus forward current')
plt.title('Variable red LED illumination')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.xlabel('$U_{pdF} [V]$')
plt.ylabel('$I_{pdF} [nA]$')

plt.show()
```

```{python}
dataset = pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1/Ipd_Popt6_UpdF_30112022 2022-11-30 12-02-00 0 2022-11-30 12-42-42 0.csv',
  sep=',', skiprows=5)
pys.SweepPlot(dataset, '2 - Get Measurement Value', 'Get Measurement Value', 
  '1 - Sweep CH2 Voltage Setting', '1 - Get CH2 Current Measurement', 2, yScale=10**3, labelScale=1000)
# plt.yscale('log')
plt.suptitle('Photodiode forward voltage versus forward current')
plt.title('Variable red LED illumination')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.xlabel('$U_{pdF} [V]$')
plt.ylabel('$I_{pdF} [nA]$')

plt.show()
```


```{python}
dataset = pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1/Ipd_Popt6_UpdR_30112022 2022-11-30 12-02-00 0 2022-11-30 12-03-12 0.csv',
  sep=',', skiprows=6)
pys.SweepPlot(dataset, '2 - Get Measurement Value', '3 - Get Measurement Value', 
  '1 - Sweep CH2 Voltage Setting', '1 - Get CH2 Current Measurement', 2, xScale=-1, yScale=10**6, labelScale=1000)
plt.yscale('log')
plt.suptitle('Photodiode reverse voltage versus reverse current')
plt.title('Variable red LED illumination')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.xlabel('$U_{pdR} [V]$')
plt.ylabel('$I_{pdR} [nA]$')

plt.show()
```

### Trace

```{python}
dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1\Trace 2022-11-30 13-37-16 0.csv', 
sep=',', skiprows=1, usecols=['Time (s)','1 (VOLT)','3 (VOLT)'])

dataset['Time (s)'] = (dataset['Time (s)'] - dataset['Time (s)'][0]) * 1000

plt.figure()
plt.plot(dataset['Time (s)'], dataset['1 (VOLT)'], label='U_generator')
plt.plot(dataset['Time (s)'], dataset['3 (VOLT)'], label='U_photodiode')
plt.ylabel('U [V]')
plt.xlabel('Time [ms]')
plt.grid()
plt.show()

dataset = pd.read_csv('datasets\RED_LED_PD_mj\RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1\Trace 2022-11-30 13-40-46 0.csv', 
sep=',', skiprows=1, usecols=['Time (s)','1 (VOLT)','3 (VOLT)'])

dataset['Time (s)'] = (dataset['Time (s)'] - dataset['Time (s)'][0])*1000

plt.figure()
plt.plot(dataset['Time (s)'], dataset['1 (VOLT)'], label='U_generator')
plt.plot(dataset['Time (s)'], dataset['3 (VOLT)'], label='U_photodiode')
plt.ylabel('U [V]')
plt.xlabel('Time [ms]')
plt.grid()
plt.show()
```

## Under blue LED
Directory _/LVJ_PD_BVue_l1mm_02122022G2_

In `Ipd_Ufpd_Uled_0_6V 2022-12-02 11-32-27 0.csv` there is only one measured variable. Assumed this dataset is invalid.

```{python}
dataset=pd.read_csv('datasets/LVJ_PD_BVue_l1mm_02122022G2/Ipd_Urpd_Uled_0_6V 2022-12-02 10-29-07 0.csv', sep=',', skiprows=6)

pys.SweepPlot(dataset, '2 - Get Measurement Value', '1 - Get Measurement Value', '3 - Sweep CH2 Voltage Setting', '3 - Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000)
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.yscale('log')
plt.suptitle('Photodiode voltage versus photodiode current')
plt.title('Variable blue LED illumination, 1 mm distance')
plt.xlabel('$U_{pd} [V]$')
plt.ylabel('$I_{pd} [nA]$')

plt.show()
```

## Under green LED

# Red LED

## Voltage-current characteristics

Directory _/RED_LED_PD_mj/Iled_Uled_RED_

```{python}
dataset=pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/Iled_Uled_RED/IledRed_UledF_06V_50mV 2022-12-02 16-48-23 1.csv', sep=',')
plt.figure()
plt.plot(dataset['1 - Get CH2 Voltage Setting'], dataset['2 - Get Measurement Value Iled']*1000)
plt.grid()
plt.xlabel('$U_{LED}[V]$')
plt.ylabel('$I_{LED}[mA]$')
plt.title('Red LED voltage versus current')

plt.show()
```

# Blue LED

Directory _LVJ_OPTO_LEDtrans20122022_

```{python}

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_nt_u4v1khz1_', ['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 1 kHz')

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_nt_u4v1khz2_', ['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 2 kHz')

# pys.PlotOscVoltCurr('datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022/', 'led_b_onu4v1khz3_',['1', '3', 'F1'], 'Blue LED, rectangular wave, 1 to 4 V, 3 kHz')

pys.PrintDataFromDirectory(directoryPath='datasets/LVJ_OPTO_LEDtrans20122022/LVJ_OPTO_LEDtrans20122022')

```

# Directory /LvJ_OPTO_2022_GE211222022

```{python}

pys.PrintDataFromDirectory(directoryPath="datasets\LVJ_OPTO_2022_GE21122022\LVJ_OPTO_2022_GE21122022")
```
## Directory /LvJ_OPTO_2022_GE211222022/LVJ_OPTO_2022_GE21122022/LED_R_0_5Vtr

```{python}
pys.PrintDataFromDirectory(directoryPath='datasets\LVJ_OPTO_2022_GE21122022\LVJ_OPTO_2022_GE21122022\LED_R_0_5Vtr')
```

## Directory /LvJ_OPTO_2022_GE211222022/LVJ_OPTO_2022_GE21122022/PD_dark

```{python}
pys.PrintDataFromDirectory(directoryPath='datasets\LVJ_OPTO_2022_GE21122022\LVJ_OPTO_2022_GE21122022\PD_dark')


```

# Photoresistor
Directory _/LED_PDetector_
```{python}
dataset=pd.read_csv('datasets/LVJ_PDetector/IpdF_Upd_15VBenchvue_29112022 2022-11-29 15-56-50.csv', sep=',', skiprows=4)
plt.figure()
plt.plot(dataset['1 - Get CH1 Voltage Measurement'], dataset['1 - Get CH1 Current Measurement']*1000)
plt.grid()
plt.xlabel('$U_{pd}[V]$')
plt.ylabel('$I_{pdF}[mA]$')
plt.title('Photoresistor voltage versus forward current')

plt.show()
```

# Directory LVJ_OPHO2022\LVJ_OPHO2022

TODO diode current equation

$\mu$ - diode ideality factor can be calculated

$$
I=I_0(e^{\frac{qU}{\mu KT}}-1)
$$
where: 

* $I [A]$ is diode current,
* $I_0 [A]$ is Dark Saturation Current,
* $q [C]$ is electron charge,
* $U [V]$ is voltage applied on the diode,
* $\mu$ is diode ideality factor,
* $K [\frac{J}{K}]$ is the Boltzmann constant,
* $T [K]$ is the temperature.

To calculate current on the resistor, we can use following equation:
$$
I_{R} = \frac{U_{gen}-U_{pd}}{R}
$$

## photodiode b? f = 1kHZ, U_gen = +2V/-2V falling edge?

```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_f1ku2of1_', endings=('1','3','F1'), filterValues=True,
filteringCurrent=(200,5), filteringVoltage=(200,5))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V rising edge
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_f1ku2on4_', endings=('1','3','F1'))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V whole period
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_f1ku2t1_', endings=('1','3','F1'))
```

## photodiode b? r1k? U_gen = +2V/-2V f?


```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2f_', endings=('1','3','F1'))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V


```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2f2_', endings=('1','3','F1'))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V pd_b_r1ku2f2_1???


```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2f2_', endings=('1','3','F1'))
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V pd_b_r1ku2r_1???

```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_b_r1ku2r_', endings=('1','3','F1'))
```


## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2off1_1???

```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_d_f1ku2off1_', endings=('1','3','F1'))
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr1???


```{python}
pys.PlotSingleFile_OPHO(fileName='pd_d_f1ku2onr1.csv', filePath='datasets/LVJ_OPHO2022/LVJ_OPHO2022', filterValues=True,
filteringCurrent=(200, 5), filteringVoltage=(200,5))
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr2_1???
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_d_f1ku2onr2_', endings=('1','3','F1'))
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr6_1???
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_d_f1ku2onr6_', endings=('1','3','F1'))
```
## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr6_1???
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets/LVJ_OPHO2022/LVJ_OPHO2022/', datasetBaseName='pd_d_f1ku2onr6_', endings=('1','3','F1'))
```

# Directory LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans

## iled_bu5vf1khof2.csv???
```{python}
pys.PlotSingleFile_OPHO(fileName='iled_bu5vf1khof2.csv', filePath='datasets/LVJ_OPHO2022/LVJ_OPHO2022/Blue/B_trans', filterValues=True,
filteringCurrent=(200, 5), filteringVoltage=(200,5))
```

## iled_bu5vf1khof3_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khof3_', endings=('1','3','F1'))
```

## iled_bu5vf1khof4_1

```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khof4_', endings=('1','3','F1'))
```


## iled_bu5vf1khon_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khon_', endings=('1','3','F1'))
```
## iled_bu5vf1khon3

```{python}
pys.PlotSingleFile_OPHO(fileName='iled_bu5vf1khon3.csv', filePath='datasets/LVJ_OPHO2022/LVJ_OPHO2022/Blue/B_trans', filterValues=True,
filteringCurrent=(200, 5), filteringVoltage=(200,5))
```

## iled_bu5vf1khon4_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1khon4_', endings=('1','3','F1'))
```

## iled_bu5vf1kt_1
```{python}
pys.PlotOscVoltCurr(path_to_dir='datasets\LVJ_OPHO2022\LVJ_OPHO2022\Blue\B_trans', datasetBaseName='iled_bu5vf1kt_', endings=('1','3','F1'))
```

# TODO Directory RED_LED_PD_mj/RED_LED_PD_mj/LED_RED_1mm_Ipd_UpdF_UpdR_02112022

```{python}

# dataset = pd.read_csv('dataset/RED_LED_PD_mj/RED_LED_PD_mj/LED_RED_1mm_Ipd_UpdF_UpdR_02112022/IpdF_UpdF 2022-12-02 16-24-39 0.csv', skiprows=[0,1,2,4,5,6,7], sep=',', usecols=['Time',''])


```

# TODO Directory RED_LED_PD_mj/RED_LED_PD_mj/RED_transient/