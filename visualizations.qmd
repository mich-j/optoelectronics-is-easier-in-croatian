---
title: "Optoelectronics laboratory results"
format:
  html:
    toc: true
    toc-location: left
    html-math-method: katex
---

Including necessary libraries
```{python}

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy.signal import savgol_filter
from decimal import Decimal
```

Script for plotting several datasets on one plot

```{python}
def SweepPlot(data:pd.DataFrame, xName: str, yName: str, SweepColumnName: str, 
  labelColumn: str, skipRows:int, xScale=1.0, yScale=1.0, labelScale=1.0):

  n = data[SweepColumnName].max()
  n = n.astype(int)
  if(labelColumn!=None):
    labels = dataset[labelColumn].dropna().reset_index(drop=True)*labelScale
  
  curr = 0
  index=list()

  for i in range(skipRows, len(data)-1):
    curr = data[SweepColumnName][i]
    if(curr != data[SweepColumnName][i+1]):
      index.append(i)

  plt.figure()
  plt.grid()

  prevIndex = 0
  for i in range(n):
    if(labelColumn!=None):
      plt.plot(data[xName][skipRows+prevIndex:index[i]]*xScale, 
       data[yName][skipRows+prevIndex:index[i]]*yScale, 
       label=f'{labels[i]:.2f}')
    else:
      plt.plot(data[xName][skipRows+prevIndex:index[i]]*xScale, 
        data[yName][skipRows+prevIndex:index[i]]*yScale)
    prevIndex = index[i]
```

# Directory /LED_PD_UpdF_UpdR_02112022

## Photodiode forward voltage versus forward current

```{python}
dataset = pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdF_UpdF_2022-12-02_16-24-39_0.csv',
  sep=',', skiprows=3)

SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 
  'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000)
plt.yscale('log')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.suptitle('Photodiode forward voltage versus forward current')
plt.title('Variable red LED illumination')

plt.xlabel('$U_{pdF} [V]$')
plt.ylabel('$I_{pdF} [nA]$')

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LED_PD_UpdF_UpdR_02112022/IpdR_UpdR 2022-12-02 15-57-44 0.csv', sep=',', skiprows=3)

SweepPlot(dataset, 'Get Measurement Value.1', 'Get Measurement Value', 'Sweep CH2 Voltage Setting', 'Get CH2 Current Measurement', 2, yScale=1000, labelScale=1000)
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.suptitle('Photodiode reverse voltage versus reverse current')
plt.title('Variable red LED illumination')
plt.yscale('log')
plt.xlabel('$U_{pdR} [V]$')
plt.ylabel('$I_{pdR} [mA]$')

plt.show()
```

# Directory RED_LED_PD_mj\RED_LED_PD_mj\LVJPD_RED_1cm_BenchVue_30112022G1

```{python}
dataset = pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1/Ipd_Popt6_UpdF_30112022 2022-11-30 12-02-00 0 2022-11-30 12-42-42 0.csv',
  sep=',', skiprows=5)
SweepPlot(dataset, '2 - Get Measurement Value', 'Get Measurement Value', 
  '1 - Sweep CH2 Voltage Setting', '1 - Get CH2 Current Measurement', 2, yScale=10**3, labelScale=1000)
plt.yscale('log')
plt.suptitle('Photodiode forward voltage versus forward current')
plt.title('Variable red LED illumination')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.xlabel('$U_{pdF} [V]$')
plt.ylabel('$I_{pdF} [nA]$')

plt.show()
```

```{python}
dataset = pd.read_csv('datasets/RED_LED_PD_mj/RED_LED_PD_mj/LVJPD_RED_1cm_BenchVue_30112022G1/Ipd_Popt6_UpdR_30112022 2022-11-30 12-02-00 0 2022-11-30 12-03-12 0.csv',
  sep=',', skiprows=6)
SweepPlot(dataset, '2 - Get Measurement Value', '3 - Get Measurement Value', 
  '1 - Sweep CH2 Voltage Setting', '1 - Get CH2 Current Measurement', 2, xScale=-1, yScale=10**6, labelScale=1000)
plt.yscale('log')
plt.suptitle('Photodiode reverse voltage versus reverse current')
plt.title('Variable red LED illumination')
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.xlabel('$U_{pdR} [V]$')
plt.ylabel('$I_{pdR} [nA]$')

plt.show()
```

# Directory /LVJ_PD_BVue_l1mm_02122022G2

In `Ipd_Ufpd_Uled_0_6V 2022-12-02 11-32-27 0.csv` there is only one measured variable. Assumed this dataset is invalid.

```{python}
dataset=pd.read_csv('datasets/LVJ_PD_BVue_l1mm_02122022G2/Ipd_Urpd_Uled_0_6V 2022-12-02 10-29-07 0.csv', sep=',', skiprows=6)

SweepPlot(dataset, '2 - Get Measurement Value', '1 - Get Measurement Value', '3 - Sweep CH2 Voltage Setting', '3 - Get CH2 Current Measurement', 2, yScale=10**6, labelScale=1000)
plt.legend(title='$I_{LED} [mA]$', loc='best')
plt.yscale('log')
plt.suptitle('Photodiode voltage versus photodiode current')
plt.title('Variable blue LED illumination, 1 mm distance')
plt.xlabel('$U_{pd} [V]$')
plt.ylabel('$I_{pd} [nA]$')

plt.show()
```

# Directory LvJ_OPTO_2022_GE211222022


# Directory LED_PDetector
```{python}
dataset=pd.read_csv('datasets/LVJ_PDetector/IpdF_Upd_15VBenchvue_29112022 2022-11-29 15-56-50.csv', sep=',', skiprows=4)
plt.figure()
plt.plot(dataset['1 - Get CH1 Voltage Measurement'], dataset['1 - Get CH1 Current Measurement']*1000)
plt.grid()
plt.xlabel('$U_{pd}[V]$')
plt.ylabel('$I_{pdF}[mA]$')
plt.title('Photoresistor voltage versus forward current')

plt.show()
```

# Directory LVJ_BenchVue_30112022G1


# Directory LVJ_OPHO2022\LVJ_OPHO2022

## photodiode b? f = 1kHZ, U_gen = +2V/-2V falling edge?

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2of1_1.csv', sep=',', skiprows=1)

plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2of1_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

To calculate current on the resistor, we can use following equation:
$$
I_{R} = \frac{U_{gen}-U_{pd}}{R}
$$

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2of1_f1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=300, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V rising edge

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2on4_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2on4_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2on4_F1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=300, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V whole period

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2t1_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2t1_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_f1ku2t1_F1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=3, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode b? r1k? U_gen = +2V/-2V f?

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f_f1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=300, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```



```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_f1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=300, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode b? f = 1kHZ, U_gen = +2V/-2V pd_b_r1ku2f2_1???

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2f2_F1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=300, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```
## photodiode b? f = 1kHZ, U_gen = +2V/-2V pd_b_r1ku2r_1???

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2r_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2r_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_b_r1ku2r_F1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=120, polyorder=2)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2off1_1???

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_d_f1ku2off1_1.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{generator} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_d_f1ku2off1_3.csv', sep=',', skiprows=1)


plt.figure()
dataset.plot(x='second', y='Volt')
plt.xlabel('$Time [s]$')
plt.ylabel('$U_{pd} [V]$')
plt.grid()

plt.show()
```

```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_d_f1ku2off1_F1.csv', sep=',', skiprows=1)

resistance = 100.0 #

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['Volt'] = dataset['Volt'] / resistance * 1000
filtered = savgol_filter(x=dataset['Volt'], window_length=200, polyorder=5)
dataset.plot(x='second', y='Volt', label = 'raw current')
plt.plot(dataset['second'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```

## photodiode d? f = 1kHZ, U_gen = +2V/-2V pd_d_f1ku2onr1???


```{python}
dataset=pd.read_csv('datasets/LVJ_OPHO2022/LVJ_OPHO2022/pd_d_f1ku2onr1.csv', sep=',', skiprows=[1,2,3])
resistance = 100.0 #

plt.figure()
dataset.plot(x='x-axis', y='1', label='U_generator')
dataset.plot(x='x-axis', y='3', label='U_photodiode')
plt.xlabel('$Time [s]$')
plt.ylabel('$U} [V]$')
plt.grid()

plt.show()

plt.figure()
# Convert the voltage on the resistor (U_generator - U_photodiode) to current [mA] 
dataset['F1'] = dataset['F1'] / resistance * 1000
filtered = savgol_filter(x=dataset['F1'], window_length=200, polyorder=5)
dataset.plot(x='x-axis', y='F1', label = 'raw current')
plt.plot(dataset['x-axis'], filtered, label = 'filtered current')
plt.xlabel('$Time [s]$')
plt.ylabel('$I_{pd} [mA]$')
plt.legend()
plt.grid()

plt.show()
```